@model Frecuento2.Models.Empresa
@{
    /**/

    ViewBag.Title = "Detalles";
}
<h2>Perfil de Empresa</h2>

<div>
    
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Nombre)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Nombre)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Dirección)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Dirección)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Teléfono)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Teléfono)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Nº_Empleados)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Nº_Empleados)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Nº_Cuenta)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Nº_Cuenta)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
    </dl>

</div>
<p>
    @Html.ActionLink("Editar", "Edit", new { id = Model.Id_Empresa }, new { @class = "btn btn-info" })

</p>

<div class="row">
    <div class="col-md-6">
        <h4>Evento de empresa</h4>

        @using (Html.BeginForm("CreateFromCompany", "EvenEmpres"))
        {
            @Html.AntiForgeryToken()


            @Html.HiddenFor(m => m.Id_Empresa)
            @Html.Hidden("Id_EvenEmpre", 0)

            <div class="row">
                <div class="col-sm-5">
                    @Html.DropDownList("Id_Tipo_Evento", new SelectList(ViewBag.EventList, "Id_Tipo_Evento", "Descripción"), htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBox("Precio_Base", "", new { @type = "number", @class = "form-control" })
                </div>
                <div class="col-sm-4">
                    <input type="submit" value="Guardar" id="btnEvent" class="btn btn-success" />
                    <input type="button" onclick="EventCancelClick()" id="btnEventCancel" value="Cancelar" style="display:none" class="btn btn-danger" />

                </div>
            </div>

        }
        <br />
        @if (Model.EvenEmpre != null && Model.EvenEmpre.Count > 0)
        {
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.EvenEmpre.ToList()[0].Tipo_Evento.Descripción)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.EvenEmpre.ToList()[0].Precio_Base)
                    </th>
                </tr>
                @foreach (var item in Model.EvenEmpre)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Tipo_Evento.Descripción)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Precio_Base)
                        </td>
                        <td>
                            @using (Html.BeginForm("DeleteFromCompany", "EvenEmpres"))
                            {
                                <button type="button" value="Editar" onclick="onEventEditClick(@item.Id_EvenEmpre,@item.Precio_Base,@item.Id_Tipo_Evento)" class="btn btn-info">Editar</button>

                                @Html.Hidden("compId", Model.Id_Empresa)
                                @Html.Hidden("evenEmpId", item.Id_EvenEmpre)
                                <button type="button" onclick="return DeleteRowEvent(this)" id="btnDeleteCancel" value="Cancelar" class="btn btn-danger">Borrar</button>
                            }

                        </td>
                    </tr>
                }
            </table>
        }
    </div>
    <div class="col-md-6">
        <h4> Servicio de Empresa</h4>
        @using (Html.BeginForm("CreateForCompany", "ServiEmpres"))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.Id_Empresa)
            @Html.Hidden("Id_ServiEmpre", 0)

            <div class="row">
                <div class="col-sm-5">
                    @Html.DropDownList("Id_Tipo_Servicio", new SelectList(ViewBag.ServiceList, "Id_Tipo_Servicio", "Descripción"), htmlAttributes: new { @class = "form-control" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBox("Precio_Servicio", "", new { @type = "number", @class = "form-control" })
                </div>
                <div class="col-sm-4">
                    <input type="submit" id="btnService" value="Guardar" class="btn btn-success" />
                    <input type="button" onclick="ServiceCancelClick()" id="btnServiceCancel" value="Cancelar" style="display:none" class="btn btn-danger" />
                </div>
            </div>
        }
        <br />
        @if (Model.ServiEmpre != null && Model.ServiEmpre.Count > 0)
        {
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.ServiEmpre.ToList()[0].Tipo_Servicio.Descripción)
                    </th>
                    <th>
                        @Html.DisplayNameFor(modelItem => Model.ServiEmpre.ToList()[0].Precio_Servicio)
                    </th>

                </tr>
                @foreach (var item in Model.ServiEmpre)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Tipo_Servicio.Descripción)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Precio_Servicio)
                        </td>
                        <td>
                            @using (Html.BeginForm("DeleteFromCompany", "ServiEmpres"))
                            {
                                <button type="button" value="Editar" onclick="onServiceEditClick(@item.Id_ServiEmpre,@item.Precio_Servicio,@item.Id_Tipo_Servicio)" class="btn btn-info">Editar</button>

                                @Html.Hidden("compId", Model.Id_Empresa)
                                @Html.Hidden("servEmpId", item.Id_ServiEmpre)
                                <button type="button" onclick="return DeleteRowService(this)" id="btnDeleteCancel" value="Cancelar" class="btn btn-danger">Borrar</button>
                            }
                        </td>

                    </tr>
                }
            </table>
        }

    </div>
</div>




<script src="~/Scripts/jquery-3.3.1.min.js"></script>

<script src="~/Scripts/bootstrap.min.js"></script>



<script>
    var DeleteEvent = '/EvenEmpres/DeleteFromCompany';
    var DeleteService = '/ServiEmpres/DeleteFromCompany';
    function onEventEditClick(id, price, eventId) {
        $("#Id_EvenEmpre").val(id);
        $("#Precio_Base").val(price);
        $("#Id_Tipo_Evento").val(eventId);
        $("#btnEvent").val("Guardar");
        $("#btnEventCancel").show();
    }

    function EventCancelClick() {
        $("#btnEvent").val("Guardar");
        $("#btnEventCancel").hide();
        $("#Id_EvenEmpre").val(0);
    }

    function onServiceEditClick(id, price, serId) {
        $("#Id_ServiEmpre").val(id);
        $("#Precio_Servicio").val(price);
        $("#Id_Tipo_Servicio").val(serId);
        $("#btnService").val("Guardar");
        $("#btnServiceCancel").show();
    }

    function ServiceCancelClick() {
        $("#btnService").val("Guardar");
        $("#btnServiceCancel").hide();
        $("#Id_ServiEmpre").val(0);
    }

    function DeleteRowEvent(e) {
        if (!confirm('¿Seguro que quieres borrar el evento?')) {
            return false;
        }
        var param = { evenEmpId: $(e).prev().val(), compId: $(e).prev().prev().val() };
        $(e).parent().parent().parent().hide();
        $.ajax({
            type: "Post",
            url: DeleteEvent,
            data: param,
            async: false,
            success: function (data) {
                if (data.success == "true") {
                }
            },
            error: function (ex) {
                alert();
            }
        });
    }
    function DeleteRowService(e) {

        if (!confirm('¿Seguro que quieres borrar el servicio?')) {
            return false;
        }
        var param = { servEmpId: $(e).prev().val(), compId: $(e).prev().prev().val() };
        $(e).parent().parent().parent().hide();
        $.ajax({
            type: "Post",
            url: DeleteService,
            data: param,
            async: false,
            success: function (data) {
                if (data.success == "true") {
                }
            },
            error: function (ex) {
                alert();
            }
        });
    }
    $(document).ready(function () {

    });
</script>